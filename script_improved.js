let stockData=[];let filteredData=[];let currentView='grid';let cart=[];const elements={};let imageObserver;document.addEventListener('DOMContentLoaded',function(){cacheElements();initializeLazyLoading();loadStockData();setupEventListeners();setupCartEvents();updateCartCount();});function cacheElements(){elements.totalProducts=document.getElementById('total-products');elements.rawMaterials=document.getElementById('raw-materials');elements.certificates=document.getElementById('certificates');elements.grades=document.getElementById('grades');elements.totalCrates=document.getElementById('total-crates');elements.productsCount=document.getElementById('products-count');elements.productsContainer=document.getElementById('products-container');elements.gridViewBtn=document.getElementById('grid-view-btn');elements.listViewBtn=document.getElementById('list-view-btn');elements.clearFiltersBtn=document.getElementById('clear-filters');elements.modal=document.getElementById('product-modal');elements.modalTitle=document.getElementById('modal-title');elements.modalBody=document.getElementById('modal-body');elements.modalClose=document.getElementById('modal-close');elements.cartModal=document.getElementById('cart-modal');elements.cartModalClose=document.getElementById('cart-modal-close');elements.cartItemsList=document.getElementById('cart-items-list');elements.openCartBtn=document.getElementById('open-cart-btn');elements.cartCount=document.getElementById('cart-count');elements.woodTypeFilter=document.getElementById('wood-type-filter');elements.certificateFilter=document.getElementById('certificate-filter');elements.gradeFilter=document.getElementById('grade-filter');elements.thicknessFilter=document.getElementById('thickness-filter');}function initializeLazyLoading(){if('IntersectionObserver' in window){imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;if(img.dataset.src){img.src=img.dataset.src;img.classList.remove('lazy');img.classList.add('loaded');observer.unobserve(img);}}});},{rootMargin: '50px 0px',threshold: 0.01});}}async function loadStockData(){const loadingElement=document.getElementById('loading-placeholder');try{if(loadingElement){loadingElement.style.display='flex';}const response=await fetch('stock_data.json',{cache: 'force-cache'});if(!response.ok){throw new Error(`HTTP error!status: ${response.status}`);}const data=await response.json();if(data.metadata&&data.products){stockData=data.products;}else{stockData=data;}filteredData=[...stockData];if(loadingElement){loadingElement.style.display='none';}initializeFilters();updateStats();renderProducts();}catch(error){console.error('Error loading stock data:',error);if(loadingElement){loadingElement.innerHTML='<div style="color: #ef4444;">Error loading products. Please try again later.</div>';}setTimeout(()=>{loadStockData();},3000);}}function setupEventListeners(){if(elements.gridViewBtn){elements.gridViewBtn.addEventListener('click',()=>setView('grid'));}if(elements.listViewBtn){elements.listViewBtn.addEventListener('click',()=>setView('list'));}if(elements.clearFiltersBtn){elements.clearFiltersBtn.addEventListener('click',clearAllFilters);}if(elements.modalClose){elements.modalClose.addEventListener('click',closeModal);}if(elements.cartModalClose){elements.cartModalClose.addEventListener('click',closeCartModal);}if(elements.modal){elements.modal.addEventListener('click',(e)=>{if(e.target===elements.modal)closeModal();});}if(elements.cartModal){elements.cartModal.addEventListener('click',(e)=>{if(e.target===elements.cartModal)closeCartModal();});}const filterElements=[ elements.woodTypeFilter,elements.certificateFilter,elements.gradeFilter,elements.thicknessFilter ];filterElements.forEach(element=>{if(element){element.addEventListener('change',debounce(applyFilters,300));}});document.addEventListener('keydown',(e)=>{if(e.key==='Escape'){closeModal();closeCartModal();}});}function debounce(func,wait){let timeout;return function executedFunction(...args){const later=()=>{clearTimeout(timeout);func(...args);};clearTimeout(timeout);timeout=setTimeout(later,wait);};}function initializeFilters(){if(!stockData.length)return;const uniqueWoodTypes=[...new Set(stockData.map(item=>item.Logs))].sort();const uniqueCertificates=[...new Set(stockData.map(item=>item.Certificate))].sort();const uniqueGrades=[...new Set(stockData.map(item=>item.Grade))].sort();const uniqueThicknesses=[...new Set(stockData.map(item=>item.Thickness))].sort((a,b)=>a-b);populateFilter(elements.woodTypeFilter,uniqueWoodTypes);populateFilter(elements.certificateFilter,uniqueCertificates);populateFilter(elements.gradeFilter,uniqueGrades,formatGrade);populateFilter(elements.thicknessFilter,uniqueThicknesses,(value)=>`${value}mm`);}function populateFilter(selectElement,options,formatter=null){if(!selectElement)return;const fragment=document.createDocumentFragment();options.forEach(option=>{const optionElement=document.createElement('option');optionElement.value=option;optionElement.textContent=formatter ? formatter(option): option;fragment.appendChild(optionElement);});selectElement.appendChild(fragment);}function applyFilters(){const filters={woodType: elements.woodTypeFilter?.value||'',certificate: elements.certificateFilter?.value||'',grade: elements.gradeFilter?.value||'',thickness: elements.thicknessFilter?.value||''};filteredData=stockData.filter(product=>{return(!filters.woodType||product.Logs===filters.woodType)&&(!filters.certificate||product.Certificate===filters.certificate)&&(!filters.grade||product.Grade===filters.grade)&&(!filters.thickness||product.Thickness.toString()===filters.thickness);});updateStats();renderProducts();}function clearAllFilters(){const filterElements=[ elements.woodTypeFilter,elements.certificateFilter,elements.gradeFilter,elements.thicknessFilter ];filterElements.forEach(element=>{if(element)element.value='';});filteredData=[...stockData];updateStats();renderProducts();}function setView(viewMode){currentView=viewMode;elements.gridViewBtn?.classList.toggle('active',viewMode==='grid');elements.listViewBtn?.classList.toggle('active',viewMode==='list');renderProducts();}function updateStats(){const uniqueWoodTypes=new Set(filteredData.map(item=>item.Logs)).size;const uniqueCertificates=new Set(filteredData.map(item=>item.Certificate)).size;const uniqueGrades=new Set(filteredData.map(item=>item.Grade)).size;const totalCrates=filteredData.reduce((sum,item)=>sum+item.Crates,0);if(elements.totalProducts)elements.totalProducts.textContent=filteredData.length;if(elements.rawMaterials)elements.rawMaterials.textContent=uniqueWoodTypes;if(elements.certificates)elements.certificates.textContent=uniqueCertificates;if(elements.grades)elements.grades.textContent=uniqueGrades;if(elements.totalCrates)elements.totalCrates.textContent=formatNumber(totalCrates);if(elements.productsCount)elements.productsCount.textContent=filteredData.length;}function renderProducts(){const container=elements.productsContainer;if(!container)return;if(filteredData.length===0){container.innerHTML=`<div class="no-products">${t('noProducts')}</div>`;return;}container.className=`products-container ${currentView==='grid' ? 'products-grid' : 'products-list'}`;const fragment=document.createDocumentFragment();filteredData.forEach((product,index)=>{const productElement=document.createElement('div');productElement.innerHTML=createProductCard(product);const detailsBtn=productElement.querySelector('.details-btn');if(detailsBtn){detailsBtn.addEventListener('click',()=>showProductDetails(product));}const lazyImages=productElement.querySelectorAll('img.lazy');lazyImages.forEach(img=>{if(imageObserver){imageObserver.observe(img);}});fragment.appendChild(productElement.firstElementChild);});container.innerHTML='';container.appendChild(fragment);}function createProductCard(product){const isListView=currentView==='list';if(isListView){return `<div class="product-card"><div class="product-info"><div class="product-badges"><span class="badge badge-material">${product.Logs}</span><span class="badge badge-certificate">${product.Certificate}</span><span class="badge badge-grade">${formatGrade(product.Grade)}</span></div><div class="product-details"><div class="product-title">${product.Size}</div><div class="product-specs">${product.Crates}crates available • ${product.Thickness}mm • ${product.Ply}ply</div></div></div><div class="product-price">$${formatCurrency(product.Price)}/m³ FOB</div><div class="product-actions"><button class="details-btn">${t('viewDetails')}</button></div></div>`;}else{return `<div class="product-card"><div class="product-badges"><span class="badge badge-material">${product.Logs}</span><span class="badge badge-certificate">${product.Certificate}</span><span class="badge badge-grade">${formatGrade(product.Grade)}</span></div><div class="product-details"><div class="product-title">${product.Size}</div><div class="product-specs">${product.Thickness}mm • ${product.Ply}ply</div><div class="product-specs">${product.Crates}crates available</div></div><div class="product-price">$${formatCurrency(product.Price)}/m³ FOB</div><div class="product-actions"><button class="details-btn">${t('viewDetails')}</button></div></div>`;}}function showProductDetails(product){if(!elements.modal||!elements.modalBody)return;elements.modalTitle.textContent=`${product.Logs}${formatGrade(product.Grade)}-${product.Size}`;const densityPerM3=product.WeightPerCrate/product.VolumePerCrate;const weightPerSheet=product.WeightPerCrate/product.SheetsPerCrate;const pricePerSheet=(product.Price*product.VolumePerCrate)/product.SheetsPerCrate;elements.modalBody.innerHTML=`<div class="modal-product-info"><div class="modal-badges"><span class="badge badge-material">${product.Logs}</span><span class="badge badge-certificate">${product.Certificate}</span><span class="badge badge-grade">${formatGrade(product.Grade)}</span></div><div class="modal-specs-grid"><div class="spec-item"><span class="spec-label">Size:</span><span class="spec-value">${product.Size}</span></div><div class="spec-item"><span class="spec-label">Thickness:</span><span class="spec-value">${product.Thickness}mm</span></div><div class="spec-item"><span class="spec-label">Plies:</span><span class="spec-value">${product.Ply}</span></div><div class="spec-item"><span class="spec-label">Available Crates:</span><span class="spec-value">${product.Crates}</span></div><div class="spec-item"><span class="spec-label">Weight per Crate:</span><span class="spec-value">${formatNumber(product.WeightPerCrate)}kg</span></div><div class="spec-item"><span class="spec-label">Volume per Crate:</span><span class="spec-value">${product.VolumePerCrate}m³</span></div><div class="spec-item"><span class="spec-label">Sheets per Crate:</span><span class="spec-value">${product.SheetsPerCrate}</span></div><div class="spec-item"><span class="spec-label">Density:</span><span class="spec-value">${formatNumber(densityPerM3)}kg/m³</span></div><div class="spec-item"><span class="spec-label">Weight per Sheet:</span><span class="spec-value">${formatNumber(weightPerSheet)}kg</span></div><div class="spec-item"><span class="spec-label">Price per m³:</span><span class="spec-value">$${formatCurrency(product.Price)}FOB</span></div><div class="spec-item"><span class="spec-label">Price per Sheet:</span><span class="spec-value">$${formatCurrency(pricePerSheet)}</span></div><div class="spec-item"><span class="spec-label">Payload Limit:</span><span class="spec-value">${formatNumber(product.PayloadLimit)}kg</span></div></div><div class="modal-actions"><div class="cart-controls"><label for="cart-qty">Quantity(crates):</label><input type="number" id="cart-qty" class="cart-qty" min="1" max="${product.Crates}" value="1"><span class="max-available">${t('maxAvailable',{qty: product.Crates})}</span></div><button class="cart-btn" onclick="addToCart('${product.Logs}','${product.Certificate}','${formatGrade(product.Grade)}','${product.Size}',${product.Thickness},${product.Ply},${product.Price},${product.Crates})">${t('addToCart')}</button></div></div>`;elements.modal.style.display='block';document.body.style.overflow='hidden';}function closeModal(){if(elements.modal){elements.modal.style.display='none';document.body.style.overflow='auto';}}function setupCartEvents(){if(elements.openCartBtn){elements.openCartBtn.addEventListener('click',openCartModal);}}function addToCart(logs,certificate,grade,size,thickness,ply,price,maxCrates){const qtyInput=document.getElementById('cart-qty');const qty=parseInt(qtyInput?.value||1);if(qty<1||qty>maxCrates){alert(`Please enter a quantity between 1 and ${maxCrates}`);return;}const item={id: `${logs}-${certificate}-${grade}-${size}-${thickness}`,logs,certificate,grade,size,thickness,ply,price,qty,maxCrates};const existingIndex=cart.findIndex(cartItem=>cartItem.id===item.id);if(existingIndex>=0){cart[existingIndex].qty=Math.min(cart[existingIndex].qty+qty,maxCrates);}else{cart.push(item);}updateCartCount();closeModal();showNotification(t('cartAdded'));}function updateCartCount(){const totalItems=cart.reduce((sum,item)=>sum+item.qty,0);if(elements.cartCount){elements.cartCount.textContent=totalItems;}}function openCartModal(){if(!elements.cartModal||!elements.cartItemsList)return;if(cart.length===0){elements.cartItemsList.innerHTML=`<div class="cart-empty"><h3>${t('cartEmptyTitle')}</h3><p>${t('cartEmptySubtitle')}</p></div>`;}else{const totalCrates=cart.reduce((sum,item)=>sum+item.qty,0);const estimatedTotal=cart.reduce((sum,item)=>sum+(item.price*item.qty),0);elements.cartItemsList.innerHTML=`<div class="cart-items">${cart.map((item,index)=>`<div class="cart-item"><div class="cart-item-desc"><strong>${item.logs}${item.grade}-${item.size}</strong><br>${item.thickness}mm • ${item.ply}ply • ${item.certificate}</div><div class="cart-item-qty">${item.qty}crates</div><button class="cart-remove-btn" onclick="removeFromCart(${index})">${t('cartRemove')}</button></div>`).join('')}</div><div class="cart-summary"><div class="cart-total"><strong>${t('cartTotal')}${t('cartCratesTotal',{qty: totalCrates})}</strong><br>${t('cartEstimatedTotal')}$${formatCurrency(estimatedTotal)}</div><div class="cart-actions"><button class="cart-send-btn" onclick="sendCartRequest()">${t('cartSendBtn')}</button></div><p class="cart-note">${t('cartNote')}</p></div>`;}elements.cartModal.style.display='block';document.body.style.overflow='hidden';}function closeCartModal(){if(elements.cartModal){elements.cartModal.style.display='none';document.body.style.overflow='auto';}}function removeFromCart(index){cart.splice(index,1);updateCartCount();openCartModal();}function sendCartRequest(){if(cart.length===0)return;alert(t('cartFormAlert'));}function formatNumber(num){return new Intl.NumberFormat('en-US').format(Math.round(num));}function formatCurrency(num){return new Intl.NumberFormat('en-US',{minimumFractionDigits: 0,maximumFractionDigits: 0}).format(Math.round(num));}function formatGrade(grade){const upperGrades=['BCX','CCX','CDX'];return upperGrades.includes(grade.toUpperCase())? grade.toUpperCase(): grade;}function showNotification(message){const notification=document.createElement('div');notification.className='notification';notification.textContent=message;notification.style.cssText=` position: fixed;top: 20px;right: 20px;background: #00B04F;color: white;padding: 1rem 1.5rem;border-radius: 6px;z-index: 3000;animation: slideIn 0.3s ease;`;document.body.appendChild(notification);setTimeout(()=>{notification.remove();},3000);}function t(key,params={}){if(typeof window.t==='function'){return window.t(key,params);}const fallbacks={'noProducts': 'No products found with the selected criteria.','viewDetails': 'View Details','addToCart': 'Add to List','maxAvailable': 'Maximum available:{qty}crates','cartAdded': 'Item added to list!','cartEmptyTitle': 'Your list is empty','cartEmptySubtitle': 'Add products to start your quote','cartRemove': 'Remove','cartTotal': 'Total:','cartCratesTotal': '{qty}crates in total','cartEstimatedTotal': 'Estimated total value:','cartSendBtn': 'Send List Intent','cartNote': 'Note: This is a quote request,prices may vary according to market conditions and final quantity.','cartFormAlert': 'To send your interest list,click the green "List Request" button on the screen and fill out the form.'};let text=fallbacks[key]||key;Object.keys(params).forEach(k=>{text=text.replace(`{${k}}`,params[k]);});return text;}